/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Market, MarketInterface } from "../Market";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startsAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endsAt",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketData",
        name: "market",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "daoAccountId",
            type: "string",
          },
          {
            internalType: "string",
            name: "marketCreatorAccountId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "selfDestructWindow",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buySellThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct Market.Management",
        name: "management",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeBalance",
            type: "uint256",
          },
        ],
        internalType: "struct Market.CollateralToken",
        name: "collateralToken",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InternalSellResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payee",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InternalSellUnresolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "outcomeId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "collateralTokenFeeBalance",
        type: "uint256",
      },
    ],
    name: "RegisterPlayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "playerId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "outputImgUri",
        type: "string",
      },
    ],
    name: "ResolutionSuccess",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "playerId",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "outputImgUri",
        type: "string",
      },
    ],
    name: "RevealPlayerResult",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "get_amount_mintable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_block_timestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_collateral_token_data",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "decimals",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeBalance",
            type: "uint256",
          },
        ],
        internalType: "struct Market.CollateralToken",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_fees_data",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedAt",
            type: "uint256",
          },
        ],
        internalType: "struct Market.Fees",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_management_data",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "daoAccountId",
            type: "string",
          },
          {
            internalType: "string",
            name: "marketCreatorAccountId",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "selfDestructWindow",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buySellThreshold",
            type: "uint256",
          },
        ],
        internalType: "struct Market.Management",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_market_data",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "imageUri",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startsAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endsAt",
            type: "uint256",
          },
        ],
        internalType: "struct Market.MarketData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerId",
        type: "address",
      },
    ],
    name: "get_player",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "id",
            type: "address",
          },
          {
            internalType: "string",
            name: "prompt",
            type: "string",
          },
          {
            internalType: "string",
            name: "outputImgUri",
            type: "string",
          },
          {
            internalType: "string",
            name: "result",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct Market.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_players_count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_resolution_data",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "window",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "revealWindow",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "resolvedAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "playerId",
            type: "address",
          },
        ],
        internalType: "struct Market.Resolution",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_before_market_ends",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_expired_unresolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_resolution_window_expired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_resolved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "is_reveal_window_expired",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerId",
        type: "address",
      },
    ],
    name: "player_exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "prompt",
        type: "string",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerId",
        type: "address",
      },
    ],
    name: "resolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerId",
        type: "address",
      },
      {
        internalType: "string",
        name: "result",
        type: "string",
      },
      {
        internalType: "string",
        name: "outputImgUri",
        type: "string",
      },
    ],
    name: "reveal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sell",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MarketConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MarketConstructorParams): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Market__factory extends ContractFactory {
  constructor(...args: MarketConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    market: Market.MarketDataStruct,
    management: Market.ManagementStruct,
    collateralToken: Market.CollateralTokenStruct,
    overrides?: NonPayableOverrides & { from?: string },
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(market, management, collateralToken, overrides || {});
  }
  override deploy(
    market: Market.MarketDataStruct,
    management: Market.ManagementStruct,
    collateralToken: Market.CollateralTokenStruct,
    overrides?: NonPayableOverrides & { from?: string },
  ) {
    return super.deploy(market, management, collateralToken, overrides || {}) as Promise<
      Market & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Market__factory {
    return super.connect(runner) as Market__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketInterface {
    return new Interface(_abi) as MarketInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Market {
    return new Contract(address, _abi, runner) as unknown as Market;
  }
}
